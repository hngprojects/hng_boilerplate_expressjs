name: Deploy to dev

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed
    branches: [dev]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion=='success' && github.event.workflow_run.head_branch == 'dev' }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker images
        run: docker compose -f docker-compose.yml build
      
      - name: Save and compress Docker images
        run: |
          docker save $(docker compose -f docker-compose.yml config | grep 'image:' | awk '{print $2}') > dev-images.tar
          gzip dev-images.tar
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: dev-images.tar.gz
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-images
          path: .
      
      - name: Copy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "dev-images.tar.gz,docker-compose.yml"
          target: "~/tmp/"

      - name: Deploy images to server 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ~/tmp/
            gunzip dev-images.tar.gz
            docker load < dev-images.tar
            rm -f dev-images.tar
            cd /var/www/aihomework/dev
            git stash
            git pull origin dev
            docker compose down
            docker compose up -d
  
  on-failure:
      runs-on: ubuntu-latest
      if: ${{ github.event.workflow_run.conclusion=='failure' }}
      steps:
        - run: echo "Triggering the Workflow Failed"
  
