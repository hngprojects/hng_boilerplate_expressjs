services:
  backend:
    build: 
      context: .
      args:
        - NODE_ENV=${NODE_ENV}
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - app
    depends_on:
      backend_db:
        condition: service_healthy
    restart: always

  backend_db:
    image: postgres
    container_name: backend_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app
    depends_on:
      - backend
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app

networks:
  app:
    driver: bridge
    
volumes:
  postgres-data: