services:
  backend:
    build: 
      context: .
      args:
        - NODE_ENV=${NODE_ENV}
        - DATABASE_URL=postgres://postgres:postgres@backend_db:5432/postgres
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - app
    depends_on:
      backend_db:
        condition: service_healthy
    restart: always
    command: sh -c "sleep 10 && yarn start" 

  backend_db:
    image: postgres:13
    container_name: backend_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - app

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres-data: